{"version":3,"file":"cache.module.js","sourceRoot":"","sources":["../src/cache.module.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,QAAQ,EAAuB,cAAc,EAAE,MAAM,eAAe,CAAC;AAC9E,OAAO,EAAe,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC5D,OAAO,EAAE,kBAAkB,EAAE,OAAO,EAAE,MAAM,gBAAgB,CAAC;AAC7D,OAAO,EAAE,mBAAmB,EAAE,MAAM,iBAAiB,CAAC;AAEtD,MAAM,CAAC,IAAM,MAAM,GAAG,IAAI,cAAc,CAAc,QAAQ,CAAC,CAAC;AAEhE,IAAI,mBAAmB,GAAgB;IACrC,SAAS,EAAE,EAAE;CACd,CAAC;AAEF,MAAM,UAAU,iBAAiB,CAAC,OAAgB,EAAE,WAAwB;IAC1E,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,mBAAmB,EAAE,WAAW,CAAC,CAAC;IAE9D,OAAO,IAAI,YAAY,CAAC,IAAI,mBAAmB,CAAC,OAAO,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC;AACnF,CAAC;AAUD;IAAA;IAcA,CAAC;oBAdY,WAAW;IACf,mBAAO,GAAd,UAAe,WAAyB;QACtC,OAAO;YACL,QAAQ,EAAE,aAAW;YACrB,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE;gBAC1C;oBACE,OAAO,EAAE,YAAY;oBACrB,UAAU,EAAE,iBAAiB;oBAC7B,IAAI,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC;iBACxB;aACF;SACF,CAAC;IACJ,CAAC;;IAbU,WAAW;QARvB,QAAQ,CAAC;YACR,OAAO,EAAE;gBACP,kBAAkB,CAAC,OAAO,CAAC;oBACzB,IAAI,EAAE,cAAc;oBACpB,WAAW,EAAE,CAAC,WAAW,EAAE,QAAQ,EAAE,QAAQ,CAAC;iBAC/C,CAAC;aACH;SACF,CAAC;OACW,WAAW,CAcvB;IAAD,kBAAC;CAAA,AAdD,IAcC;SAdY,WAAW","sourcesContent":["import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\r\nimport { CacheConfig, CacheService } from './cache.service';\r\nimport { IonicStorageModule, Storage } from '@ionic/storage';\r\nimport { CacheStorageService } from './cache-storage';\r\n\r\nexport const CONFIG = new InjectionToken<CacheConfig>('CONFIG');\r\n\r\nlet cacheConfigDefaults: CacheConfig = {\r\n  keyPrefix: ''\r\n};\r\n\r\nexport function buildCacheService(storage: Storage, cacheConfig: CacheConfig) {\r\n  cacheConfig = Object.assign(cacheConfigDefaults, cacheConfig);\r\n\r\n  return new CacheService(new CacheStorageService(storage, cacheConfig.keyPrefix));\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicStorageModule.forRoot({\r\n      name: '__ionicCache',\r\n      driverOrder: ['indexeddb', 'sqlite', 'websql']\r\n    })\r\n  ]\r\n})\r\nexport class CacheModule {\r\n  static forRoot(cacheConfig?: CacheConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: CacheModule,\r\n      providers: [\r\n        { provide: CONFIG, useValue: cacheConfig },\r\n        {\r\n          provide: CacheService,\r\n          useFactory: buildCacheService,\r\n          deps: [Storage, CONFIG]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"]}